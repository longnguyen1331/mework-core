@{
    var serviceResult = ViewData["ServiceResult"] as Contract.Services.ServiceSearchResultDto;
    var curPage = ViewData["CurPage"] as Int32? ?? 1;
    var totalPages = ViewData["TotalPage"] as Int32? ?? 1;
    var pages = ViewData["Pages"] as List<Int32> ?? new List<int>() { 1 };
}

<div class="modal-header" style="display: none">
    <div class="d-flex align-items-end gap-2 w-100">
        <div class="search-input w-100 p-0">
            <input type="text" placeholder="Tìm dịch vụ...." class="txt-seatch w-100" id="service-search-keyword" value="@Html.Raw(ViewData["ServiceKeyword"])">
        </div>
        <button class="btn btn-custom btn-search" tabindex="0" type="button" onclick="loadBookingServicePanel(0)">Tìm kiếm</button>
    </div>
</div>
<div class="modal-body register-service py-0" style="display: none">
    <div class="d-flex flex-xs-column flex-wrap layout-grid register-service gap-3">
        @if (serviceResult != null && serviceResult.Items != null && serviceResult.Items.Any())
        {
            foreach (var item in serviceResult.Items)
            {
                <div class="panel panel-default register-service-panel mb-0 w-100">
                    <div class="panel-body d-flex p-3 pb-0">
                        <div class="register-service-thumb">
                            <img alt="service" sizes="100vw" src="@item?.ImageUrl" decoding="async" class="imageBox" loading="lazy" style="position: absolute; height: 100%; width: 100%; inset: 0px; color: transparent;">
                        </div>
                        <div class="register-service-box">
                            <span class="register-service-title" style="text-align:left;">@item?.Name</span>
                            <div class="d-flex justify-content-between register-service-box-content">
                                <p class="retail-price">
                                    Giá: <span class="price">@item?.Charges.ToString("#,##0") đ</span>
                                </p>

                                <button class="btn-custom btn-select-service" tabindex="0" type="button" data-serviceId="@item?.Id" data-UserId="@ViewData["UserId"]" onclick="registerService(this)">
                                    <span class="btn-content text-ellipses">Chọn dịch vụ</span>
                                </button>
                            </div>

                        </div>
                    </div>
                  
                </div>
            }
        }
    </div>
</div>
<div class="modal-footer" style="display: none">
    @if (totalPages > 0)
    {
        <div class="d-flex justify-content-center">
            <ul class="pagination m-0">
                @{
                    int delta = 1;
                    int range = delta + 4;
                    int numberTruncateLeft = curPage - delta;
                    int numberTruncateRight = curPage + delta;

                    pages = pages.Where(x => x == 1 || x == totalPages || (curPage < 5 && x <= 5) || (curPage > totalPages - 4 && x > totalPages - 4) || (x >= numberTruncateLeft && x <= numberTruncateRight)).ToList();
                }
                <li class="post-next @(curPage == 1 ? "disabled" : "")"><a class="page-btn" onclick="prevPage(@(curPage - 1))"><svg class="custom-svg-icon" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="NavigateBeforeIcon"><path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path></svg></a></li>
                @for (int i = 0; i < pages.Count(); i++)
                {
                    int pageNum = pages[i];

                    <li class="@(pageNum == curPage ? "active" : "")" id="page-@pageNum"><a class="page-btn" onclick="goToPage(@pageNum)">@pageNum</a></li>

                    if (i < (pages.Count() - 1) && pageNum + 1 != pages[i + 1])
                    {
                        <li><span class="page-btn">...</span></li>
                    }
                }

                <li class="post-prev @(curPage == totalPages ? "disabled" : "")"><a class="page-btn" onclick="nextPage(@(curPage + 1))"><svg class="custom-svg-icon" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="NavigateNextIcon"><path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"></path></svg></a></li>
            </ul>
        </div>
    }
</div>
